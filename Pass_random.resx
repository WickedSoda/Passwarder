<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="Icons.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        cfl/Mx82kdtQU98AAAAASUVORK5CYII=
</value>
  </data>
</root>